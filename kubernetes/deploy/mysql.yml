apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app.kubernetes.io/name: mysql-service
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: database
spec:
  ports:
    - port: 3306
      targetPort: mysql-port
      name: mysql-service-port
  clusterIP: None
  type: ClusterIP
  selector:
    app.kubernetes.io/name: mysql-pod
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-statefulset
  labels:
    app.kubernetes.io/name: mysql-statefulset
    app.kubernetes.io/component: instance-set
    app.kubernetes.io/part-of: database
spec:
  serviceName: mysql-service
  replicas: 1
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql-pod
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql-pod
        app.kubernetes.io/component: instance
        app.kubernetes.io/part-of: database
    spec:
      volumes:
        - name: mysql-credentials-volume
          secret:
            secretName: mysql-credentials
            items:
              - key: MYSQL_PASSWORD
                path: ./mysql_password
              - key: MYSQL_ROOT_PASSWORD
                path: ./mysql_root_password
      containers:
        - name: mysql
          image: mysql:8.4.0
          ports:
            - containerPort: 3306
              name: mysql-port
          volumeMounts:
            - name: mysql-data-volume
              mountPath: /var/lib/mysql
            - name: mysql-credentials-volume
              readOnly: true
              mountPath: "/etc/secrets"
          envFrom:
            - configMapRef:
                name: mysql-configs
          env:
            - name: MYSQL_PASSWORD_FILE
              value: /etc/secrets/mysql_password
            - name: MYSQL_ROOT_PASSWORD_FILE
              value: /etc/secrets/mysql_root_password
          readinessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                - |
                  mysqladmin ping -h 127.0.0.1 \
                    -u $MYSQL_USER \
                    --password=$(cat /etc/secrets/mysql_password)
            initialDelaySeconds: 10
            periodSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: mysql-data-volume
      spec:
        accessModes:
          - ReadWriteOnce
        # storageClassName: standard
        resources:
          requests:
            storage: 5Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-seeding-job
  labels:
    app: mysql
spec:
  template:
    spec:
      restartPolicy: OnFailure
      volumes:
        - name: mysql-config-volume
          configMap:
            name: mysql-seed-script
            items:
              - key: seeding_script
                path: ./seed.sql
        - name: mysql-credentials-volume
          secret:
            secretName: mysql-credentials
            items:
              - key: MYSQL_PASSWORD
                path: ./mysql_password
      containers:
        - name: mysql-seeder
          image: mysql:8.4.0
          volumeMounts:
            - name: mysql-config-volume
              readOnly: true
              mountPath: "/etc/configs"
            - name: mysql-credentials-volume
              readOnly: true
              mountPath: "/etc/secrets"
          envFrom:
            - configMapRef:
                name: mysql-configs
          env:
            - name: MYSQL_PASSWORD_FILE
              value: /etc/secrets/mysql_password
            - name: MYSQL_HOST
              value: mysql-statefulset-0.mysql-service.default.svc.cluster.local
          command:
            - bash
            - -c
            - |
              mysqladmin ping -h $MYSQL_HOST \
                -u $MYSQL_USER \
                --password=$(< /etc/secrets/mysql_password) && \
              mysql --host=$MYSQL_HOST \
                -u $MYSQL_USER \
                --password=$(< /etc/secrets/mysql_password) \
                -D $MYSQL_DATABASE \
                -e 'source /etc/configs/seed.sql' || \
              exit 1
  backoffLimit: 10
